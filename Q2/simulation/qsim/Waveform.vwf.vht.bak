-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

-- *****************************************************************************
-- This file contains a Vhdl test bench with test vectors .The test vectors     
-- are exported from a vector file in the Quartus Waveform Editor and apply to  
-- the top level entity of the current Quartus project .The user can use this   
-- testbench to simulate his design using a third-party simulation tool .       
-- *****************************************************************************
-- Generated on "04/20/2020 18:30:21"
                                                             
-- Vhdl Test Bench(with test vectors) for design  :          Q2
-- 
-- Simulation tool : 3rd Party
-- 

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                

ENTITY Q2_vhd_vec_tst IS
END Q2_vhd_vec_tst;
ARCHITECTURE Q2_arch OF Q2_vhd_vec_tst IS
-- constants                                                 
-- signals                                                   
SIGNAL clk : STD_LOGIC;
SIGNAL M : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL Mul : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL Q : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL start : STD_LOGIC;
COMPONENT Q2
	PORT (
	clk : IN STD_LOGIC;
	M : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	Mul : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
	Q : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	start : IN STD_LOGIC
	);
END COMPONENT;
BEGIN
	i1 : Q2
	PORT MAP (
-- list connections between master ports and signals
	clk => clk,
	M => M,
	Mul => Mul,
	Q => Q,
	start => start
	);

-- clk
t_prcs_clk: PROCESS
BEGIN
LOOP
	clk <= '0';
	WAIT FOR 25000 ps;
	clk <= '1';
	WAIT FOR 25000 ps;
	IF (NOW >= 1000000 ps) THEN WAIT; END IF;
END LOOP;
END PROCESS t_prcs_clk;

-- start
t_prcs_start: PROCESS
BEGIN
	start <= '0';
	WAIT FOR 40000 ps;
	start <= '1';
	WAIT FOR 20000 ps;
	start <= '0';
WAIT;
END PROCESS t_prcs_start;
-- M[3]
t_prcs_M_3: PROCESS
BEGIN
	M(3) <= '1';
WAIT;
END PROCESS t_prcs_M_3;
-- M[2]
t_prcs_M_2: PROCESS
BEGIN
	M(2) <= '0';
WAIT;
END PROCESS t_prcs_M_2;
-- M[1]
t_prcs_M_1: PROCESS
BEGIN
	M(1) <= '0';
WAIT;
END PROCESS t_prcs_M_1;
-- M[0]
t_prcs_M_0: PROCESS
BEGIN
	M(0) <= '0';
WAIT;
END PROCESS t_prcs_M_0;
-- Q[3]
t_prcs_Q_3: PROCESS
BEGIN
	Q(3) <= '1';
WAIT;
END PROCESS t_prcs_Q_3;
-- Q[2]
t_prcs_Q_2: PROCESS
BEGIN
	Q(2) <= '0';
WAIT;
END PROCESS t_prcs_Q_2;
-- Q[1]
t_prcs_Q_1: PROCESS
BEGIN
	Q(1) <= '1';
WAIT;
END PROCESS t_prcs_Q_1;
-- Q[0]
t_prcs_Q_0: PROCESS
BEGIN
	Q(0) <= '1';
WAIT;
END PROCESS t_prcs_Q_0;
END Q2_arch;
