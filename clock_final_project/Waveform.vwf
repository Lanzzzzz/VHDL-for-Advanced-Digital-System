/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off DIgital_Clock -c DIgital_Clock --vector_source="D:/intelFPGA_lite/program/clock_final_project/Waveform.vwf" --testbench_file="D:/intelFPGA_lite/program/clock_final_project/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off DIgital_Clock -c DIgital_Clock --vector_source="D:/intelFPGA_lite/program/clock_final_project/Waveform.vwf" --testbench_file="D:/intelFPGA_lite/program/clock_final_project/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="D:/intelFPGA_lite/program/clock_final_project/simulation/qsim/" DIgital_Clock -c DIgital_Clock</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="D:/intelFPGA_lite/program/clock_final_project/simulation/qsim/" DIgital_Clock -c DIgital_Clock</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work DIgital_Clock.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.DIgital_Clock_vhd_vec_tst
vcd file -direction DIgital_Clock.msim.vcd
vcd add -internal DIgital_Clock_vhd_vec_tst/*
vcd add -internal DIgital_Clock_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work DIgital_Clock.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -sdfmax DIgital_Clock_vhd_vec_tst/i1=DIgital_Clock_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.DIgital_Clock_vhd_vec_tst
vcd file -direction DIgital_Clock.msim.vcd
vcd add -internal DIgital_Clock_vhd_vec_tst/*
vcd add -internal DIgital_Clock_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 25000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("buzz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("display_hour1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_hour1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour1";
}

SIGNAL("display_hour2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_hour2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_hour2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_hour2";
}

SIGNAL("display_min1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_min1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min1";
}

SIGNAL("display_min2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_min2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_min2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_min2";
}

SIGNAL("display_sec1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_sec1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec1";
}

SIGNAL("display_sec2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("display_sec2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("display_sec2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "display_sec2";
}

SIGNAL("increase")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("operate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("switch_mode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("buzz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("clk_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2500;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("display_hour1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_hour2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_min2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("display_sec2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 24001.0;
	}
}

TRANSITION_LIST("increase")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3120.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 10840.0;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 5220.0;
	}
}

TRANSITION_LIST("operate")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1090.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 1240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 6520.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 1300.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 2680.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 1560.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("switch_mode")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6660.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 8740.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4920.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4620.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "increase";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "operate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "switch_mode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_hour2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_min2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
	CHILDREN = 45, 46, 47, 48, 49, 50, 51;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "display_sec2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 44;
}

DISPLAY_LINE
{
	CHANNEL = "buzz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
