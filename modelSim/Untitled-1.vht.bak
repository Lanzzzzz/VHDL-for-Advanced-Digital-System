-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

-- *****************************************************************************
-- This file contains a Vhdl test bench with test vectors .The test vectors     
-- are exported from a vector file in the Quartus Waveform Editor and apply to  
-- the top level entity of the current Quartus project .The user can use this   
-- testbench to simulate his design using a third-party simulation tool .       
-- *****************************************************************************
-- Generated on "04/01/2020 22:38:30"
                                                             
-- Vhdl Test Bench(with test vectors) for design  :          second
-- 
-- Simulation tool : 3rd Party
-- 

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                

ENTITY second_vhd_vec_tst IS
END second_vhd_vec_tst;
ARCHITECTURE second_arch OF second_vhd_vec_tst IS
-- constants                                                 
-- signals                                                   
SIGNAL Clock : STD_LOGIC;
SIGNAL pulse : STD_LOGIC;
SIGNAL rate : STD_LOGIC_VECTOR(31 DOWNTO 0);
SIGNAL Temp : STD_LOGIC_VECTOR(7 DOWNTO 0);
COMPONENT second
	PORT (
	Clock : IN STD_LOGIC;
	pulse : OUT STD_LOGIC;
	rate : OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
	Temp : IN STD_LOGIC_VECTOR(7 DOWNTO 0)
	);
END COMPONENT;
BEGIN
	i1 : second
	PORT MAP (
-- list connections between master ports and signals
	Clock => Clock,
	pulse => pulse,
	rate => rate,
	Temp => Temp
	);

-- Clock
t_prcs_Clock: PROCESS
BEGIN
LOOP
	Clock <= '0';
	WAIT FOR 10000 ps;
	Clock <= '1';
	WAIT FOR 10000 ps;
	IF (NOW >= 100000000 ps) THEN WAIT; END IF;
END LOOP;
END PROCESS t_prcs_Clock;
-- Temp[7]
t_prcs_Temp_7: PROCESS
BEGIN
	Temp(7) <= '0';
WAIT;
END PROCESS t_prcs_Temp_7;
-- Temp[6]
t_prcs_Temp_6: PROCESS
BEGIN
	Temp(6) <= '0';
WAIT;
END PROCESS t_prcs_Temp_6;
-- Temp[5]
t_prcs_Temp_5: PROCESS
BEGIN
	Temp(5) <= '0';
WAIT;
END PROCESS t_prcs_Temp_5;
-- Temp[4]
t_prcs_Temp_4: PROCESS
BEGIN
	Temp(4) <= '0';
WAIT;
END PROCESS t_prcs_Temp_4;
-- Temp[3]
t_prcs_Temp_3: PROCESS
BEGIN
	Temp(3) <= '0';
WAIT;
END PROCESS t_prcs_Temp_3;
-- Temp[2]
t_prcs_Temp_2: PROCESS
BEGIN
	Temp(2) <= '0';
WAIT;
END PROCESS t_prcs_Temp_2;
-- Temp[1]
t_prcs_Temp_1: PROCESS
BEGIN
	Temp(1) <= '0';
WAIT;
END PROCESS t_prcs_Temp_1;
-- Temp[0]
t_prcs_Temp_0: PROCESS
BEGIN
	Temp(0) <= '0';
WAIT;
END PROCESS t_prcs_Temp_0;
END second_arch;

